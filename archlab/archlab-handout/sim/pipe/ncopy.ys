#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion
	# Loop header
	xorq %rax,%rax		# count = 0;
	andq %rdx,%rdx		# len <= 0?
	jle Done		# if so, goto Done:

Loop:
	mrmovq (%rdi), %r10	# read val from src...
	rmmovq %r10, (%rsi)	# ...and store it to dst
	andq %r10, %r10		# val <= 0?
	jle Npos		# if so, goto Npos:
	irmovq $1, %r10
	iaddq $1, %rax		# count++
Npos:
	irmovq $8, %r10
	subq %r10, %rdx		# len -= 1
	iaddq $8, %rdi		# src++
	iaddq $8, %rsi		# dst++
	# Unroll 7 more times
	mrmovq (%rdi), %r10
	rmmovq %r10, (%rsi)
	andq %r10, %r10
	jle Npos1
	irmovq $1, %r10
	iaddq $1, %rax
Npos1:
	irmovq $8, %r10
	subq %r10, %rdx
	iaddq $8, %rdi
	iaddq $8, %rsi

	mrmovq (%rdi), %r10
	rmmovq %r10, (%rsi)
	andq %r10, %r10
	jle Npos2
	irmovq $1, %r10
	iaddq $1, %rax
Npos2:
	irmovq $8, %r10
	subq %r10, %rdx
	iaddq $8, %rdi
	iaddq $8, %rsi

	mrmovq (%rdi), %r10
	rmmovq %r10, (%rsi)
	andq %r10, %r10
	jle Npos3
	irmovq $1, %r10
	iaddq $1, %rax
Npos3:
	irmovq $8, %r10
	subq %r10, %rdx
	iaddq $8, %rdi
	iaddq $8, %rsi

	mrmovq (%rdi), %r10
	rmmovq %r10, (%rsi)
	andq %r10, %r10
	jle Npos4
	irmovq $1, %r10
	iaddq $1, %rax
Npos4:
	irmovq $8, %r10
	subq %r10, %rdx
	iaddq $8, %rdi
	iaddq $8, %rsi

	mrmovq (%rdi), %r10
	rmmovq %r10, (%rsi)
	andq %r10, %r10
	jle Npos5
	irmovq $1, %r10
	iaddq $1, %rax
Npos5:
	irmovq $8, %r10
	subq %r10, %rdx
	iaddq $8, %rdi
	iaddq $8, %rsi

	mrmovq (%rdi), %r10
	rmmovq %r10, (%rsi)
	andq %r10, %r10
	jle Npos6
	irmovq $1, %r10
	iaddq $1, %rax
Npos6:
	irmovq $8, %r10
	subq %r10, %rdx
	iaddq $8, %rdi
	iaddq $8, %rsi

	mrmovq (%rdi), %r10
	rmmovq %r10, (%rsi)
	andq %r10, %r10
	jle Npos7
	irmovq $1, %r10
	iaddq $1, %rax
Npos7:
	irmovq $8, %r10
	subq %r10, %rdx
	iaddq $8, %rdi
	iaddq $8, %rsi

	andq %rdx, %rdx		# len > 0?
	jg Loop			# if so, goto Loop:
##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret

##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
